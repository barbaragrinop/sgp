import Head from "next/head";
import React, { FormEvent } from "react";
import Input from "@/components/Input";
import Navbar from "@/components/Navbar";
import styles from '@/styles/Contato.module.scss'
import * as yup from "yup";
import { useForm } from "react-hook-form";
import { yupResolver } from "@hookform/resolvers/yup";
import { FooterCompleto } from "@/components/FooterCompleto";
import { useRouter } from "next/router";
import { FormContato } from "@/typings/FormContato";
import { BsFacebook, BsInstagram, BsLinkedin,BsTelephone, BsTwitter, BsYoutube } from "react-icons/bs";
import { AiOutlineMail } from "react-icons/ai";
import { RedesSociaisSGP } from "@/utils/redes-socias";
import Link from "next/link";
import Image from "next/image";

const schema = yup.object().shape({
  nome: yup.string().required("Campo obrigatório"),
  sobrenome: yup.string().required("Campo obrigatório"),
  email: yup.string().required("Campo obrigatório"),
  telefone: yup.string().required("Campo obrigatório"),
  tipoevento: yup.string().required("Campo obrigatório"),
  dataevento: yup.string().required("Campo obrigatório"),
  numconvidados: yup.string().required("Campo obrigatório"),
  localevento: yup.string().required("Campo obrigatório"),
  mensagem: yup.string(),
});


export default function orcamento() {
  const { push } = useRouter()

  const {
    register,
    formState: { errors, isValid, isSubmitting },
    getValues,
    reset,
  } = useForm<FormContato>({
    defaultValues: {
      nome: "",
      email: "",
      mensagem: "",
      arquivo: "", 
      assunto: "", 
      celular: "", 
      conheceusgp: "", 
      dataEnvio: undefined,
      empresa: "", 
      facebook: "", 
      telComl: ""
    },
    mode: "all",
    resolver: yupResolver(schema),
  });


  function getIconByName(rede: string){
    if(rede === "Facebook") {
      return <BsFacebook />
    }

    if(rede === "Youtube") {
      return <BsYoutube />
    }

    if(rede === "LinkedIn") {
      return <BsLinkedin />
    }

    if(rede === "Twitter") {
      return <BsTwitter />
    }

    if(rede === "Instagram") {
      return <BsInstagram />
    }
  }

  const onSubmit = async (ev: FormEvent<HTMLFormElement>) => {
    ev.preventDefault();
  };

  return (
    <div className={styles.main}>
      <Head>
        <title>SGP - Soluções em Gestão Público</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <div className={styles.content}></div>
      <div className={styles.pageSize}>
        <div className={styles.mainContentForm}>
          <div className={styles.introduction}>
            <h2>Inicie um contato preenchendo o formulário</h2>
            <span>Disponibilizamos vários canais de comunicação e este é um deles para que você possa se comunicar mais rápido conosco!</span>
            
            <ul>
              <li>Central de Atendimento</li>
              <li> <BsTelephone/> (11) 3237-4232</li>
              <li> <BsTelephone/> (11) 97443-5898</li>
              <li> <AiOutlineMail/> atendimento@sgpsolucoes.com.br</li>
            </ul>

            <div >
              {RedesSociaisSGP.map(({link, name}) => (
                <Link href={link} key={link} className={styles.rede} >
                  {getIconByName(name)}
                </Link>
              ))}
            </div>
            
            <Image
              src={"/images/contato/mulher-sorrindo.webp"}
              alt="Bolo de chocolate"
              width={416}
              height={435}
            />
          </div>
          <form className={styles.formContato} onSubmit={onSubmit}>
            <div>
              <Input
                type="text"
                label="Empresa"
                register={register("empresa")}
                error={errors.empresa?.message}
              />
              <Input
                type="text"
                label="Assunto"
                register={register("assunto")}
                error={errors.assunto?.message}
              />
            </div>
            <div>
              <Input
                name="email"
                type="email"
                label="E-mail"
                register={register("email")}
                error={errors.email?.message}
              />
              <Input
                name="nome"
                label="Nome"
                register={register("nome")}
                error={errors.nome?.message}
              />
            </div>
            <div>
              <Input
                name="telComl"
                type="text"
                label="Tel.Coml"
                register={register("telComl")}
                error={errors.telComl?.message}
              />
              <Input
                name="celular"
                label="Celular"
                register={register("celular")}
                error={errors.celular?.message}
              />
            </div>
            <div>
              <Input
                name="conheceusgp"
                label="Como conheceu a SGP?"
                register={register("conheceusgp")}
                error={errors.conheceusgp?.message}
              />
              <Input
                name="facebook"
                type="text"
                label="Facebook"
                register={register("facebook")}
                error={errors.facebook?.message}
              />
            </div>
            <div>
              <Input
                name="mensagem"
                type="text"
                label="Mensagem"
                as="textarea"
                register={register("mensagem")}
                error={errors.mensagem?.message}
              />
            </div>
            <div className={styles.informacoes}>
              <p>Campos obrigatórios*</p>
              <p>
                Ao enviar sua mensagem, você autoriza receber comunicações do
                Grupo Cicareli, podendo cancelar a qualquer momento. Consulte
                nossa <b onClick={() => push("/politica-privacidade")}>Política de Privacidade</b>.
              </p>
            </div>
            {/* <button onClick={sendMessageWppDesktop} className={styles.desktop} disabled={!isValid || isSubmitting}>
              Enviar dados
            </button>
            <button onClick={sendMessageWppMobile} className={styles.mobile} disabled={!isValid || isSubmitting}>
              Enviar dados
            </button> */}
          </form>
        </div>
      </div>
      {/* <WhatsappIcon /> */}
      <FooterCompleto />
    </div>
  );
}
